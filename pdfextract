#!/usr/bin/python3

import sys
from typing import List
import pikepdf
from dataclasses import dataclass

def openPdf(inputFileName: str)->pikepdf.Pdf:
    try:
        outputPdf: pikepdf.Pdf = pikepdf.Pdf.open(inputFileName)
    except pikepdf.PasswordError:
        exit("Program doesn't support password protected files. Abort.")
    except FileNotFoundError:
        exit("File not found. Abort.")
    except:
        exit(f"Couldn't open '{inputFileName}'. Abort.")
    return outputPdf

@dataclass
class SimpleRange:
    firstPage: int
    lastPage: int

    def __init__(self, simpleRangeString: str)->None:
        numStrings: List[str] = simpleRangeString.split('-')
        if not (len(numStrings) in [1, 2]):
            exit(f"Invalid range '{simpleRangeString}'")

        for numString in numStrings:
            if not numString.isdigit():
                exit(f"Invalid range '{simpleRangeString}'")

        self.firstPage = int(numStrings[0])
        if self.firstPage < 1:
            exit(f"Invalid page number '{self.firstPage}'")

        if len(numStrings) == 1:
            self.lastPage = int(numStrings[0])
        else:
            self.lastPage = int(numStrings[1])
        return

    def string(self):
        return f"{self.firstPage}-{self.lastPage}"


def extractSimpleRange(srcFile: pikepdf.Pdf, pageRange: SimpleRange)->pikepdf.Pdf:
    if len(srcFile.pages) < pageRange.lastPage:
        exit(f"Page range '{pageRange.string()}' out of bound.")
    outputFile: pikepdf.Pdf = pikepdf.Pdf.new()
    for pageNum in range(pageRange.firstPage-1, pageRange.lastPage):
        outputFile.pages.append(srcFile.pages[pageNum])
    return outputFile

def resolveCompositeRange(rangeString: str)->List[SimpleRange]:
    simpleRangeStringList: List[str] = rangeString.split(',')
    outputList: List[SimpleRange] = []
    for simpleRangeString in simpleRangeStringList:
        outputList.append(SimpleRange(simpleRangeString))
    return outputList

def extractAndJoinSlices(srcFile: pikepdf.Pdf, ranges: List[SimpleRange])->pikepdf.Pdf:
    outputFile: pikepdf.Pdf = pikepdf.Pdf.new()
    for simpleRange in ranges:
        currentSlice = extractSimpleRange(srcFile, simpleRange)
        outputFile.pages.extend(currentSlice.pages)
    return outputFile

def fetchArguments()->List[str]:
    if len(sys.argv) != 4:
        exit("Wrong number of arguments.")
    return sys.argv[1:]

def main()->None:
    inputFileName, rangeString, outputFileName = fetchArguments();
    inputFile: pikepdf.Pdf = openPdf(inputFileName)
    ranges: List[SimpleRange] = resolveCompositeRange(rangeString)

    newFile = extractAndJoinSlices(inputFile, ranges)
    newFile.save(outputFileName)

    newFile.close()
    inputFile.close()


if __name__=='__main__':
    main()
